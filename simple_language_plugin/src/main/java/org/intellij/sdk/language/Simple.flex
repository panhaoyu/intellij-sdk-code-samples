// Copyright 2000-2022 JetBrains s.r.o. and other contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
package org.intellij.sdk.language;

import com.intellij.formatting.WhiteSpace;import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import org.bouncycastle.pqc.jcajce.interfaces.SABERKey;
import org.intellij.sdk.language.psi.SimpleTypes;
import com.intellij.psi.TokenType;

%%

%class SimpleLexer
%implements FlexLexer
%unicode
%function advance
%type IElementType
%eof{  return;
%eof}

%{
  StringBuffer string = new StringBuffer();
%}


LineTerminator = \r|\n|\r\n
InputCharacter = [^\r\n]
WhiteSpace     = {LineTerminator} | [ \t\f]

Comment = {EndOfLineComment}

EndOfLineComment     = ";" {InputCharacter}* {LineTerminator}?

Identifier = [:jletter:] [:jletterdigit:]*

Number=[0-9][0-9.]*([eE]-?[0-9]+)?

Operators = {ArithmeticOperator} | {ComparisonOperator} | {EqualityOperator} | {LogicalOperator} | {UnaryOperator} | {AssignmentOperator} | {MemberAccessOperator} | {FunctionCallOperator} | {BracketOperator} | {CommaOperator} | {DotOperator}

ArithmeticOperator = { PlusOperator } | { MinusOperator } | { MultiplyOperator } | { DivideOperator } | { FloorDivideOperator } | { ModulusOperator } | { ExponentOperator }
PlusOperator = "+"
MinusOperator = "-"
MultiplyOperator = "*"
DivideOperator = "/"
FloorDivideOperator = "//"
ModulusOperator = "%"
ExponentOperator = "^"

ComparisonOperator = { GreaterThanOperator } | { LessThanOperator } | { GreaterThanOrEqualOperator } | { LessThanOrEqualOperator }
GreaterThanOperator = ">"
LessThanOperator = "<"
GreaterThanOrEqualOperator = ">="
LessThanOrEqualOperator = "<="

EqualityOperator = { EqualsOperator } | { NotEqualsOperator }
EqualsOperator = "=="
NotEqualsOperator = "#"

LogicalOperator = { AndOperator } | { OrOperator }
AndOperator = "&"
OrOperator = "|"

UnaryOperator = { NegationOperator } | { LogicalNotOperator }
NegationOperator = "-"
LogicalNotOperator = "~"

AssignmentOperator = { DirectAssignmentOperator } | { AddAssignmentOperator } | { SubtractAssignmentOperator } | { MultiplyAssignmentOperator } | { DivideAssignmentOperator } | { ModulusAssignmentOperator }
DirectAssignmentOperator = "="
AddAssignmentOperator = "+="
SubtractAssignmentOperator = "-="
MultiplyAssignmentOperator = "*="
DivideAssignmentOperator = "/="
ModulusAssignmentOperator = "%="

MemberAccessOperator = "->"

FunctionCallOperator    =     "@"
CommaOperator = ","
DotOperator = "."

// Bracket Operators
BracketOperator = {LeftParenthesis} | {RightParenthesis} | {LeftSquareBracket} | {RightSquareBracket} | {LeftCurlyBracket} | {RightCurlyBracket}
LeftParenthesis         = "("
RightParenthesis        = ")"
LeftSquareBracket       = "["
RightSquareBracket      = "]"
LeftCurlyBracket        = "{"
RightCurlyBracket       = "}"

StringA = \" [^\"]* \"

StringB = \' [^\']* \'

String = {StringA} | {StringB}

Keywords = (
    "caseof" | "case_of" | "case of" |
    "case" |
    "endcase" | "end_case" | "end case" |
    "command" |
    "endcommand" | "end_command" | "end command" |
    "define" |
    "end" |
    "exit" |
    "global" |
    "if" |
    "elseif" | "else_if" | "else if" |
    "else" |
    "endif" | "end_if" | "end if" |
    "local" |
    "lock" |
    "loop" |
    "endloop" | "end_loop" | "end loop" |
    "exitloop" | "exit_loop" | "exit loop" |
    "continue" |
    "return" |
    "section" |
    "endsection" | "end_section" | "end section" |
    "exitsection" | "exit_section" | "exit section" |
    "struct" | "structure"
)

FishFuntion=(
"array"|
"list"|
"string"|
"constructors"|
"mail"|
"structure"|
"creep"|
"process"|
"map"|
"system"|
"dynamic"|
"process"|
"math"|
"tensor"|
"file"|
"matrix"|
"thermal"|
"process"|
"fluid"|
"process"|
"mechanical"|
"process"|
"time"|
"global"|
"memory"|
"type"|
"io"|
"socket"|
"version"|
"creep.active"|
"creep.cycle"|
"creep.safety.factor"|
"creep.solve"|
"creep.step"|
"creep.time.total"|
"creep.timestep"|
"creep.timestep.given"|
"creep.timestep.max"|
"dynamic.active"|
"dynamic.cycle"|
"dynamic.safety.factor"|
"dynamic.solve"|
"dynamic.step"|
"dynamic.time.total"|
"dynamic.timestep"|
"dynamic.timestep.given"|
"dynamic.timestep.max"|
"file.all"|
"file.close"|
"file.delete"|
"file.end"|
"file.exist"|
"file.name"|
"file.open"|
"file.open.check"|
"file.pos"|
"file.read"|
"file.rename"|
"file.size"|
"file.write"|
"fluid.active"|
"fluid.cycle"|
"fluid.safety.factor"|
"fluid.solve"|
"fluid.step"|
"fluid.time.total"|
"fluid.timestep"|
"fluid.timestep.given"|
"fluid.timestep.max"|
"global.cycle"|
"global.deterministic"|
"global.dim"|
"global.fos"|
"global.gravity"|
"global.step"|
"global.threads"|
"global.timestep"|
"global.title"|
"io.dialog.in"|
"io.dialog.message"|
"io.dialog.notify"|
"io.in"|
"io.input"|
"io.out"|
"mail.account"|
"mail.attachment.add"|
"mail.attachment.delete"|
"mail.body"|
"mail.clear"|
"mail.domain"|
"mail.from"|
"mail.host"|
"mail.password"|
"mail.port"|
"mail.recipient.add"|
"mail.recipient.delete"|
"mail.send"|
"mail.subject"|
"math.aangle.to.euler"|
"math.abs"|
"math.acos"|
"math.and"|
"math.area.intersect.poly.poly"|
"math.area.poly"|
"math.asin"|
"math.atan"|
"math.atan2"|
"math.bound"|
"math.ceiling"|
"math.choose"|
"math.closest.segment.point"|
"math.closest.triangle.point"|
"math.cos"|
"math.cosh"|
"math.cross"|
"math.ddir.from.normal"|
"math.degrad"|
"math.dip.from.normal"|
"math.dist.segment.point"|
"math.dist.segment.segment"|
"math.dist.triangle.segment"|
"math.dot"|
"math.erf"|
"math.erfc"|
"math.euler.to.aangle"|
"math.exp"|
"math.expint"|
"math.floor"|
"math.gamma"|
"math.in.range"|
"math.ln"|
"math.log"|
"math.lshift"|
"math.mag"|
"math.mag2"|
"math.max"|
"math.min"|
"math.normal.from.dip"|
"math.normal.from.dip.ddir"|
"math.not"|
"math.or"|
"math.outer.product"|
"math.pi"|
"math.random.gauss"|
"math.random.uniform"|
"math.round"|
"math.rshift"|
"math.sgn"|
"math.sin"|
"math.sinh"|
"math.sqrt"|
"math.tan"|
"math.tanh"|
"math.triangle.inside"|
"math.triangle.interp"|
"math.unit"|
"mech.active"|
"mech.cycle"|
"mech.safety.factor"|
"mech.solve"|
"mech.step"|
"mech.time.total"|
"mech.timestep"|
"mech.timestep.given"|
"mech.timestep.max"|
"socket.close"|
"socket.create"|
"socket.delete"|
"socket.open"|
"socket.read"|
"socket.read.array"|
"socket.write"|
"socket.write.array"|
"system.beep"|
"system.clone"|
"system.command"|
"system.directory"|
"system.directory.absolute"|
"system.directory.create"|
"system.directory.current"|
"system.directory.delete"|
"system.directory.list"|
"system.directory.relative"|
"system.environment"|
"system.error"|
"system.os"|
"system.sleep"|
"thermal.active"|
"thermal.age"|
"thermal.cycle"|
"thermal.safety.factor"|
"thermal.solve"|
"thermal.step"|
"thermal.time.analytical"|
"thermal.timestep"|
"thermal.timestep.given"|
"thermal.timestep.max"|
"time.clock"|
"time.cpu"|
"time.kernel"|
"time.real"|
"array.copy"|
"array.delete"|
"array.dim"|
"array.size"|
"Constructors"|
"array"|
"boolean"|
"false"|
"float"|
"index"|
"int"|
"list"|
"map"|
"matrix"|
"null"|
"string"|
"tensor"|
"true"|
"vector"|
"list.append"|
"list.at"|
"list.concatenate"|
"list.count"|
"list.create"|
"list.extend"|
"list.find.index"|
"list.insert"|
"list.insert.list"|
"list.max"|
"list.min"|
"list.prepend"|
"list.range"|
"list.resize"|
"list.reverse"|
"list.separate"|
"list.sequence"|
"list.size"|
"list.sort"|
"list.sum"|
"map.add"|
"map.add.list"|
"map.has"|
"map.keys"|
"map.merge"|
"map.remove"|
"map.size"|
"map.value"|
"map.value.all"|
"matrix.cols"|
"matrix.det"|
"matrix.from.axis.angle"|
"matrix.from.euler"|
"matrix.identity"|
"matrix.inverse"|
"matrix.lubksb"|
"matrix.ludcmp"|
"matrix.rows"|
"matrix.to.axis.angle"|
"matrix.to.euler"|
"matrix.transpose"|
"memory"|
"memory.create"|
"memory.delete"|
"memory.fortran.float"|
"memory.fortran.index"|
"memory.fortran.integer"|
"memory.offset"|
"memory.size"|
"string.build"|
"string.csv.from"|
"string.csv.to"|
"string.file.ext"|
"string.file.name"|
"string.file.path"|
"string.find"|
"string.find.regex"|
"string.join"|
"string.len"|
"string.lower"|
"string.match.regex"|
"string.replace"|
"string.replace.regex"|
"string.simplify"|
"string.split"|
"string.split.regex"|
"string.sub"|
"string.token"|
"string.token.type"|
"string.type"|
"string.upper"|
"structure.check"|
"structure.from.map"|
"structure.name"|
"tensor.i2"|
"tensor.j2"|
"tensor.prin"|
"tensor.prin.dir"|
"tensor.prin.from"|
"tensor.total"|
"tensor.trace"|
"type"|
"type.index"|
"type.name"|
"type.pointer"|
"type.pointer.id"|
"type.pointer.name"|
"code.name"|
"version.code.major"|
"version.code.minor"|
"version.fish.major"|
"version.fish.minor"|
"brick.assemble"|
"brick.delete"|
"brick.extent"|
"brick.find"|
"brick.id"|
"brick.list"|
"brick.lower.corner"|
"brick.maxid"|
"brick.num"|
"brick.typeid"|
"brick.upper.corner"|
"inlet.active"|
"inlet.brick"|
"inlet.delete"|
"inlet.find"|
"inlet.flow.vel"|
"inlet.id"|
"inlet.list"|
"inlet.maxid"|
"inlet.num"|
"inlet.orientation"|
"inlet.pos"|
"inlet.rotation.center"|
"inlet.spin"|
"inlet.typeid"|
"inlet.vel"|
"data.label.arrow"|
"data.label.create"|
"data.label.delete"|
"data.label.end"|
"data.label.find"|
"data.label.group"|
"data.label.group.remove"|
"data.label.head"|
"data.label.isgroup"|
"data.label.list"|
"data.label.maxid"|
"data.label.name"|
"data.label.next"|
"data.label.num"|
"data.label.pos"|
"data.label.text"|
"data.label.typeid"|
"data.scalar.create"|
"data.scalar.delete"|
"data.scalar.extra"|
"data.scalar.find"|
"data.scalar.group"|
"data.scalar.group.remove"|
"data.scalar.head"|
"data.scalar.id"|
"data.scalar.isgroup"|
"data.scalar.list"|
"data.scalar.maxid"|
"data.scalar.near"|
"data.scalar.next"|
"data.scalar.num"|
"data.scalar.pos"|
"data.scalar.typeid"|
"data.scalar.value"|
"data.tensor.create"|
"data.tensor.delete"|
"data.tensor.extra"|
"data.tensor.find"|
"data.tensor.group"|
"data.tensor.group.remove"|
"data.tensor.head"|
"data.tensor.id"|
"data.tensor.isgroup"|
"data.tensor.list"|
"data.tensor.maxid"|
"data.tensor.near"|
"data.tensor.next"|
"data.tensor.num"|
"data.tensor.pos"|
"data.tensor.typeid"|
"data.tensor.value"|
"data.vector.create"|
"data.vector.ddir"|
"data.vector.delete"|
"data.vector.dip"|
"data.vector.extra"|
"data.vector.find"|
"data.vector.group"|
"data.vector.group.remove"|
"data.vector.head"|
"data.vector.id"|
"data.vector.isgroup"|
"data.vector.list"|
"data.vector.maxid"|
"data.vector.near"|
"data.vector.next"|
"data.vector.num"|
"data.vector.pos"|
"data.vector.typeid"|
"data.vector.value"|
"dfn.contact.list"|
"dfn.contact.list.all"|
"dfn.contactmap"|
"dfn.contactmap.all"|
"dfn.create"|
"dfn.delete"|
"dfn.dominance"|
"dfn.extra"|
"dfn.find"|
"dfn.fracturelist"|
"dfn.fracturenum"|
"dfn.group"|
"dfn.group.remove"|
"dfn.id"|
"dfn.isgroup"|
"dfn.list"|
"dfn.maxid"|
"dfn.name"|
"dfn.num"|
"dfn.prop"|
"dfn.template"|
"dfn.typeid"|
"fracture.aperture"|
"fracture.area"|
"fracture.centerdensity"|
"fracture.contact.list"|
"fracture.contact.list.all"|
"fracture.contactmap"|
"fracture.contactmap.all"|
"fracture.copy"|
"fracture.create"|
"fracture.ddir"|
"fracture.decimate"|
"fracture.delete"|
"fracture.density"|
"fracture.dfn"|
"fracture.diameter"|
"fracture.dip"|
"fracture.extra"|
"fracture.find"|
"fracture.genpos"|
"fracture.gensize"|
"fracture.geomp10"|
"fracture.geomp20"|
"fracture.geomp21"|
"fracture.geomtrace"|
"fracture.gintersect"|
"fracture.id"|
"fracture.inbox"|
"fracture.interarray"|
"fracture.intersect"|
"fracture.intersect.end1"|
"fracture.intersect.end2"|
"fracture.intersect.find"|
"fracture.intersect.len"|
"fracture.intersect.list"|
"fracture.intersect.maxid"|
"fracture.intersect.npolylinept"|
"fracture.intersect.num"|
"fracture.intersect.polylinept"|
"fracture.intersect.pos1"|
"fracture.intersect.pos2"|
"fracture.intersect.set"|
"fracture.intersect.set.delete"|
"fracture.intersect.set.find"|
"fracture.intersect.set.id"|
"fracture.intersect.set.interlist"|
"fracture.intersect.set.internum"|
"fracture.intersect.set.list"|
"fracture.intersect.set.maxid"|
"fracture.intersect.set.name"|
"fracture.intersect.set.num"|
"fracture.intersect.set.path"|
"fracture.intersect.set.typeid"|
"fracture.intersect.typeid"|
"fracture.isdisk"|
"fracture.isprop"|
"fracture.len"|
"fracture.list"|
"fracture.maxid"|
"fracture.near"|
"fracture.normal"|
"fracture.num"|
"fracture.p10"|
"fracture.percolation"|
"fracture.pointnear"|
"fracture.pos"|
"fracture.prop"|
"fracture.template.ddirmax"|
"fracture.template.ddirmin"|
"fracture.template.dipmax"|
"fracture.template.dipmin"|
"fracture.template.find"|
"fracture.template.id"|
"fracture.template.list"|
"fracture.template.maxid"|
"fracture.template.name"|
"fracture.template.norientparam"|
"fracture.template.nposparam"|
"fracture.template.nsizeparam"|
"fracture.template.num"|
"fracture.template.orientparam"|
"fracture.template.orienttype"|
"fracture.template.posparam"|
"fracture.template.postype"|
"fracture.template.sizemax"|
"fracture.template.sizemin"|
"fracture.template.sizeparam"|
"fracture.template.sizetype"|
"fracture.template.typeid"|
"fracture.typeid"|
"fracture.vertex.find"|
"fracture.vertex.list"|
"fracture.vertex.maxid"|
"fracture.vertex.num"|
"fracture.vertex.pos"|
"fracture.vertex.typeid"|
"fracture.vertexarray"|
"fracture.vertexlist"|
"domain.condition"|
"domain.max"|
"domain.min"|
"domain.strain.rate"|
"fragment.bodylist"|
"fragment.bodymap"|
"fragment.bodynum"|
"fragment.catalog"|
"fragment.catalog.num"|
"fragment.childlist"|
"fragment.childmap"|
"fragment.find"|
"fragment.history"|
"fragment.id"|
"fragment.index"|
"fragment.list"|
"fragment.map"|
"fragment.num"|
"fragment.parent"|
"fragment.pos"|
"fragment.pos.catalog"|
"fragment.vol"|
"geom.edge.create"|
"geom.edge.delete"|
"geom.edge.dir"|
"geom.edge.extra"|
"geom.edge.find"|
"geom.edge.id"|
"geom.edge.list"|
"geom.edge.near"|
"geom.edge.next.edge"|
"geom.edge.next.index"|
"geom.edge.node"|
"geom.edge.node.pos"|
"geom.edge.pos"|
"geom.edge.remove"|
"geom.edge.start.index"|
"geom.edge.start.poly"|
"geom.edge.typeid"|
"geom.node.create"|
"geom.node.delete"|
"geom.node.extra"|
"geom.node.find"|
"geom.node.group"|
"geom.node.group.remove"|
"geom.node.id"|
"geom.node.isgroup"|
"geom.node.list"|
"geom.node.near"|
"geom.node.pos"|
"geom.node.remove"|
"geom.node.start.edge"|
"geom.node.start.index"|
"geom.node.typeid"|
"geom.poly.add.edge"|
"geom.poly.add.node"|
"geom.poly.area"|
"geom.poly.check"|
"geom.poly.close"|
"geom.poly.create"|
"geom.poly.delete"|
"geom.poly.edge"|
"geom.poly.extra"|
"geom.poly.find"|
"geom.poly.group"|
"geom.poly.group.remove"|
"geom.poly.id"|
"geom.poly.isgroup"|
"geom.poly.list"|
"geom.poly.near"|
"geom.poly.next.index"|
"geom.poly.next.poly"|
"geom.poly.node"|
"geom.poly.normal"|
"geom.poly.pos"|
"geom.poly.remove"|
"geom.poly.size"|
"geom.poly.typeid"|
"geom.set.closest"|
"geom.set.create"|
"geom.set.delete"|
"geom.set.edge.maxid"|
"geom.set.edge.num"|
"geom.set.find"|
"geom.set.id"|
"geom.set.list"|
"geom.set.maxid"|
"geom.set.name"|
"geom.set.node.maxid"|
"geom.set.node.num"|
"geom.set.num"|
"geom.set.poly.closest"|
"geom.set.poly.maxid"|
"geom.set.poly.num"|
"geom.set.raydist"|
"geom.set.remove"|
"geom.set.typeid"|
"global.cycle"|
"global.deterministic"|
"global.dim"|
"global.fos"|
"global.gravity"|
"global.step"|
"global.threads"|
"global.timestep"|
"global.title"|
"measure.coordination"|
"measure.delete"|
"measure.find"|
"measure.id"|
"measure.list"|
"measure.maxid"|
"measure.num"|
"measure.porosity"|
"measure.pos"|
"measure.radius"|
"measure.size"|
"measure.strain.rate"|
"measure.stress"|
"measure.typeid"|
"mech.active"|
"mech.cycle"|
"mech.safety.factor"|
"mech.solve"|
"mech.step"|
"mech.time.total"|
"mech.timestep"|
"mech.timestep.given"|
"mech.timestep.max"|
"range.find"|
"range.isin"|
"table"|
"table.as.list"|
"table.clear"|
"table.create"|
"table.delete"|
"table.derivative"|
"table.fft"|
"table.find"|
"table.get"|
"table.id"|
"table.integrate"|
"table.label"|
"table.name"|
"table.size"|
"table.spectrum"|
"table.value"|
"table.x"|
"table.y"|
"ball.contact.list"|
"ball.contact.list.all"|
"ball.contactmap"|
"ball.contactmap.all"|
"ball.contactnum"|
"ball.contactnum.all"|
"ball.containing"|
"ball.convergence"|
"ball.create"|
"ball.damp"|
"ball.delete"|
"ball.density"|
"ball.disp"|
"ball.energy"|
"ball.euler"|
"ball.extra"|
"ball.find"|
"ball.fix"|
"ball.force.app"|
"ball.force.contact"|
"ball.force.unbal"|
"ball.fragment"|
"ball.group"|
"ball.group.list"|
"ball.group.remove"|
"ball.groupmap"|
"ball.id"|
"ball.inbox"|
"ball.inside"|
"ball.isbonded"|
"ball.isgroup"|
"ball.isprop"|
"ball.list"|
"ball.mass"|
"ball.mass.real"|
"ball.maxid"|
"ball.mech.convergence"|
"ball.mech.ratio.avg"|
"ball.mech.ratio.local"|
"ball.mech.ratio.max"|
"ball.mech.unbal.max"|
"ball.moi"|
"ball.moi.real"|
"ball.moment.app"|
"ball.moment.contact"|
"ball.moment.unbal"|
"ball.near"|
"ball.num"|
"ball.pos"|
"ball.prop"|
"ball.radius"|
"ball.ratio"|
"ball.ratio.target"|
"ball.rotation"|
"ball.spin"|
"ball.stress"|
"ball.stress.full"|
"ball.typeid"|
"ball.vel"|
"ball.vol"|
"clump.addpebble"|
"clump.calculate"|
"clump.contact.list"|
"clump.contact.list.all"|
"clump.contactmap"|
"clump.contactmap.all"|
"clump.contactnum"|
"clump.contactnum.all"|
"clump.containing"|
"clump.convergence"|
"clump.damp"|
"clump.delete"|
"clump.deletepebble"|
"clump.density"|
"clump.disp"|
"clump.energy"|
"clump.euler"|
"clump.extra"|
"clump.find"|
"clump.fix"|
"clump.force.app"|
"clump.force.contact"|
"clump.force.unbal"|
"clump.fragment"|
"clump.group"|
"clump.group.list"|
"clump.group.remove"|
"clump.groupmap"|
"clump.id"|
"clump.inbox"|
"clump.inglobal"|
"clump.inprin"|
"clump.inside"|
"clump.isbonded"|
"clump.isgroup"|
"clump.list"|
"clump.mass"|
"clump.mass.real"|
"clump.maxid"|
"clump.mech.convergence"|
"clump.mech.ratio.avg"|
"clump.mech.ratio.local"|
"clump.mech.ratio.max"|
"clump.mech.unbal.max"|
"clump.moi"|
"clump.moi.fix"|
"clump.moi.prin"|
"clump.moi.prin.real"|
"clump.moi.real"|
"clump.moment.app"|
"clump.moment.contact"|
"clump.moment.unbal"|
"clump.near"|
"clump.num"|
"clump.pebble.clump"|
"clump.pebble.contact.list"|
"clump.pebble.contact.list.all"|
"clump.pebble.contactmap"|
"clump.pebble.contactmap.all"|
"clump.pebble.contactnum"|
"clump.pebble.contactnum.all"|
"clump.pebble.delete"|
"clump.pebble.extra"|
"clump.pebble.find"|
"clump.pebble.group"|
"clump.pebble.group.list"|
"clump.pebble.group.remove"|
"clump.pebble.groupmap"|
"clump.pebble.id"|
"clump.pebble.inbox"|
"clump.pebble.isbonded"|
"clump.pebble.isgroup"|
"clump.pebble.isprop"|
"clump.pebble.list"|
"clump.pebble.maxid"|
"clump.pebble.near"|
"clump.pebble.num"|
"clump.pebble.pos"|
"clump.pebble.prop"|
"clump.pebble.radius"|
"clump.pebble.typeid"|
"clump.pebble.vel"|
"clump.pebblelist"|
"clump.pos"|
"clump.prop"|
"clump.ratio"|
"clump.ratio.target"|
"clump.rotate"|
"clump.rotation"|
"clump.scalesphere"|
"clump.scalevol"|
"clump.spin"|
"clump.stress"|
"clump.template"|
"clump.template.addpebble"|
"clump.template.clone"|
"clump.template.delete"|
"clump.template.deletepebble"|
"clump.template.euler"|
"clump.template.find"|
"clump.template.findpebble"|
"clump.template.list"|
"clump.template.make"|
"clump.template.maxid"|
"clump.template.moi"|
"clump.template.moi.prin"|
"clump.template.name"|
"clump.template.num"|
"clump.template.origpos"|
"clump.template.pebblelist"|
"clump.template.scale"|
"clump.template.typeid"|
"clump.template.vol"|
"clump.typeid"|
"clump.vel"|
"clump.vol"|
"wall.addfacet"|
"wall.closed"|
"wall.contact.list"|
"wall.contact.list.all"|
"wall.contactmap"|
"wall.contactmap.all"|
"wall.contactnum"|
"wall.contactnum.all"|
"wall.convex"|
"wall.cutoff"|
"wall.delete"|
"wall.disp"|
"wall.energy"|
"wall.euler"|
"wall.extra"|
"wall.facet.active"|
"wall.facet.contact.list"|
"wall.facet.contact.list.all"|
"wall.facet.contactmap"|
"wall.facet.contactmap.all"|
"wall.facet.contactnum"|
"wall.facet.contactnum.all"|
"wall.facet.conveyor"|
"wall.facet.delete"|
"wall.facet.extra"|
"wall.facet.find"|
"wall.facet.group"|
"wall.facet.group.list"|
"wall.facet.group.remove"|
"wall.facet.groupmap"|
"wall.facet.id"|
"wall.facet.inbox"|
"wall.facet.isbonded"|
"wall.facet.isgroup"|
"wall.facet.isprop"|
"wall.facet.list"|
"wall.facet.maxid"|
"wall.facet.near"|
"wall.facet.normal"|
"wall.facet.num"|
"wall.facet.pair"|
"wall.facet.pointnear"|
"wall.facet.pos"|
"wall.facet.prop"|
"wall.facet.typeid"|
"wall.facet.vertex"|
"wall.facet.wall"|
"wall.facetlist"|
"wall.find"|
"wall.force.contact"|
"wall.fragment"|
"wall.group"|
"wall.group.list"|
"wall.group.remove"|
"wall.groupmap"|
"wall.id"|
"wall.inbox"|
"wall.inside"|
"wall.isbonded"|
"wall.isgroup"|
"wall.list"|
"wall.maxid"|
"wall.moment.contact"|
"wall.name"|
"wall.near"|
"wall.num"|
"wall.pos"|
"wall.prop"|
"wall.rotation"|
"wall.rotation.center"|
"wall.spin"|
"wall.typeid"|
"wall.vel"|
"wall.vertex.delete"|
"wall.vertex.facetarray"|
"wall.vertex.find"|
"wall.vertex.id"|
"wall.vertex.inbox"|
"wall.vertex.list"|
"wall.vertex.maxid"|
"wall.vertex.near"|
"wall.vertex.num"|
"wall.vertex.pos"|
"wall.vertex.typeid"|
"wall.vertex.vel"|
"wall.vertexlist"|
"rblock.angle"|
"rblock.aspect.ratio"|
"rblock.axis.angle"|
"rblock.axis.long"|
"rblock.ball.pos"|
"rblock.ball.radius"|
"rblock.collide"|
"rblock.contact.list"|
"rblock.contact.list.all"|
"rblock.contactmap"|
"rblock.contactmap.all"|
"rblock.contactnum"|
"rblock.contactnum.all"|
"rblock.containing"|
"rblock.convergence"|
"rblock.copy"|
"rblock.damp"|
"rblock.delete"|
"rblock.density"|
"rblock.disp"|
"rblock.energy"|
"rblock.euler"|
"rblock.extra"|
"rblock.facet"|
"rblock.facet.area"|
"rblock.facet.centroid"|
"rblock.facet.closest"|
"rblock.facet.group"|
"rblock.facet.isgroup"|
"rblock.facet.list"|
"rblock.facet.map"|
"rblock.facet.normal"|
"rblock.facet.num"|
"rblock.facet.vertex.pos"|
"rblock.find"|
"rblock.fix"|
"rblock.force.app"|
"rblock.force.contact"|
"rblock.force.unbal"|
"rblock.fragment"|
"rblock.group"|
"rblock.group.list"|
"rblock.group.remove"|
"rblock.groupmap"|
"rblock.id"|
"rblock.inbox"|
"rblock.inglobal"|
"rblock.inprin"|
"rblock.inside"|
"rblock.isbonded"|
"rblock.isgroup"|
"rblock.isprop"|
"rblock.length.max"|
"rblock.length.min"|
"rblock.list"|
"rblock.mass"|
"rblock.mass.real"|
"rblock.maxid"|
"rblock.mech.convergence"|
"rblock.mech.ratio.avg"|
"rblock.mech.ratio.local"|
"rblock.mech.ratio.max"|
"rblock.mech.unbal.max"|
"rblock.moi"|
"rblock.moi.fix"|
"rblock.moi.prin"|
"rblock.moi.prin.real"|
"rblock.moi.real"|
"rblock.moment.app"|
"rblock.moment.contact"|
"rblock.moment.unbal"|
"rblock.near"|
"rblock.num"|
"rblock.pos"|
"rblock.prin.angle"|
"rblock.prin.axis.angle"|
"rblock.prin.euler"|
"rblock.prop"|
"rblock.ratio"|
"rblock.ratio.target"|
"rblock.rotation"|
"rblock.rounding"|
"rblock.scalesphere"|
"rblock.scalevol"|
"rblock.spin"|
"rblock.stress"|
"rblock.template.delete"|
"rblock.template.find"|
"rblock.template.list"|
"rblock.template.maxid"|
"rblock.template.moi"|
"rblock.template.moi.prin"|
"rblock.template.name"|
"rblock.template.num"|
"rblock.template.typeid"|
"rblock.template.vol"|
"rblock.typeid"|
"rblock.unbond"|
"rblock.vel"|
"rblock.vertex.list"|
"rblock.vertex.map"|
"rblock.vertex.num"|
"rblock.vertex.pos"|
"rblock.vol"|
"contact.activate"|
"contact.active"|
"contact.end1"|
"contact.end2"|
"contact.energy"|
"contact.energy.sum"|
"contact.extra"|
"contact.fid"|
"contact.find"|
"contact.gap"|
"contact.group"|
"contact.group.list"|
"contact.group.list.all"|
"contact.group.remove"|
"contact.groupmap"|
"contact.groupmap.all"|
"contact.id"|
"contact.inherit"|
"contact.inhibit"|
"contact.isbonded"|
"contact.isenergy"|
"contact.isgroup"|
"contact.isprop"|
"contact.list"|
"contact.list.all"|
"contact.method"|
"contact.model"|
"contact.model.prop.index"|
"contact.normal"|
"contact.num"|
"contact.num.all"|
"contact.offset"|
"contact.otherend"|
"contact.persist"|
"contact.pos"|
"contact.prop"|
"contact.prop.index"|
"contact.shear"|
"contact.typeid"|
"contact.unbond"|
"building_blocks.block.ablock"|
"building_blocks.block.center"|
"building_blocks.block.check"|
"building_blocks.block.edge"|
"building_blocks.block.face"|
"building_blocks.block.group"|
"building_blocks.block.group.remove"|
"building_blocks.block.isgroup"|
"building_blocks.block.multiplier"|
"building_blocks.block.point"|
"building_blocks.block.size"|
"building_blocks.edge.center"|
"building_blocks.edge.cp.add"|
"building_blocks.edge.cp.delete"|
"building_blocks.edge.cp.localu"|
"building_blocks.edge.cp.point"|
"building_blocks.edge.cp.size"|
"building_blocks.edge.curve"|
"building_blocks.edge.direction"|
"building_blocks.edge.grid.ratio"|
"building_blocks.edge.grid.ratio.isolate"|
"building_blocks.edge.grid.size"|
"building_blocks.edge.group"|
"building_blocks.edge.group.remove"|
"building_blocks.edge.length"|
"building_blocks.edge.next.edge"|
"building_blocks.edge.next.index"|
"building_blocks.edge.point"|
"building_blocks.edge.start.face"|
"building_blocks.edge.start.index"|
"building_blocks.edge.toglobal"|
"building_blocks.edge.tolocal"|
"building_blocks.edge.type"|
"building_blocks.face.area"|
"building_blocks.face.center"|
"building_blocks.face.check"|
"building_blocks.face.edge"|
"building_blocks.face.flip"|
"building_blocks.face.gridsizei"|
"building_blocks.face.gridsizej"|
"building_blocks.face.group"|
"building_blocks.face.group.remove"|
"building_blocks.face.isgroup"|
"building_blocks.face.next.face"|
"building_blocks.face.next.index"|
"building_blocks.face.point"|
"building_blocks.face.size"|
"building_blocks.face.toglobal"|
"building_blocks.face.tolocal"|
"building_blocks.point.group"|
"building_blocks.point.group.remove"|
"building_blocks.point.isgroup"|
"building_blocks.point.pos"|
"building_blocks.point.start.edge"|
"building_blocks.point.start.index"|
"building_blocks.set.block.create"|
"building_blocks.set.block.find"|
"building_blocks.set.block.list"|
"building_blocks.set.block.remove"|
"building_blocks.set.block.size"|
"building_blocks.set.create"|
"building_blocks.set.delete"|
"building_blocks.set.edge.find"|
"building_blocks.set.edge.list"|
"building_blocks.set.edge.near"|
"building_blocks.set.edge.size"|
"building_blocks.set.face.find"|
"building_blocks.set.face.list"|
"building_blocks.set.face.near"|
"building_blocks.set.face.size"|
"building_blocks.set.find"|
"building_blocks.set.id"|
"building_blocks.set.list"|
"building_blocks.set.name"|
"building_blocks.set.point.find"|
"building_blocks.set.point.list"|
"building_blocks.set.point.near"|
"building_blocks.set.point.size"|
"extrude.block.area"|
"extrude.block.block"|
"extrude.block.center"|
"extrude.block.check"|
"extrude.block.countzones"|
"extrude.block.edge"|
"extrude.block.extra"|
"extrude.block.find"|
"extrude.block.flip"|
"extrude.block.grid.pos"|
"extrude.block.group"|
"extrude.block.group.remove"|
"extrude.block.id"|
"extrude.block.irregular.typeid"|
"extrude.block.isgroup"|
"extrude.block.list"|
"extrude.block.maxid"|
"extrude.block.multiplier"|
"extrude.block.next.block"|
"extrude.block.next.index"|
"extrude.block.nodes"|
"extrude.block.num"|
"extrude.block.param.pos"|
"extrude.block.point"|
"extrude.block.regular.typeid"|
"extrude.block.size"|
"extrude.block.typeid"|
"extrude.block.zones.i"|
"extrude.block.zones.j"|
"extrude.edge.blocked"|
"extrude.edge.blocks"|
"extrude.edge.center"|
"extrude.edge.curve"|
"extrude.edge.direction"|
"extrude.edge.extra"|
"extrude.edge.find"|
"extrude.edge.grid.ratio"|
"extrude.edge.grid.ratio.isolate"|
"extrude.edge.grid.size"|
"extrude.edge.gridpos"|
"extrude.edge.group"|
"extrude.edge.group.remove"|
"extrude.edge.id"|
"extrude.edge.isgroup"|
"extrude.edge.length"|
"extrude.edge.list"|
"extrude.edge.maxid"|
"extrude.edge.next.edge"|
"extrude.edge.next.index"|
"extrude.edge.num"|
"extrude.edge.parampos"|
"extrude.edge.point"|
"extrude.edge.poly.add"|
"extrude.edge.poly.localu"|
"extrude.edge.poly.localv"|
"extrude.edge.poly.point"|
"extrude.edge.poly.remove"|
"extrude.edge.poly.size"|
"extrude.edge.simple"|
"extrude.edge.start.block"|
"extrude.edge.start.index"|
"extrude.edge.type"|
"extrude.edge.typeid"|
"extrude.point.blocks"|
"extrude.point.edges"|
"extrude.point.extra"|
"extrude.point.find"|
"extrude.point.group"|
"extrude.point.group.remove"|
"extrude.point.id"|
"extrude.point.isgroup"|
"extrude.point.list"|
"extrude.point.maxid"|
"extrude.point.num"|
"extrude.point.pos"|
"extrude.point.start.edge"|
"extrude.point.start.index"|
"extrude.point.typeid"|
"extrude.segment.count"|
"extrude.segment.grid.ratio"|
"extrude.segment.grid.size"|
"extrude.segment.group"|
"extrude.segment.isgroup"|
"extrude.segment.length"|
"extrude.segment.node.add"|
"extrude.segment.node.delete"|
"extrude.segment.node.pos"|
"extrude.segment.node.removegroup"|
"extrude.segment.removegroup"|
"extrude.set.axis.n"|
"extrude.set.axis.u"|
"extrude.set.axis.v"|
"extrude.set.badzones"|
"extrude.set.block.create"|
"extrude.set.block.delete"|
"extrude.set.block.find"|
"extrude.set.block.list"|
"extrude.set.block.near"|
"extrude.set.block.size"|
"extrude.set.create"|
"extrude.set.delete"|
"extrude.set.edge.combine"|
"extrude.set.edge.create"|
"extrude.set.edge.delete"|
"extrude.set.edge.find"|
"extrude.set.edge.list"|
"extrude.set.edge.near"|
"extrude.set.edge.size"|
"extrude.set.find"|
"extrude.set.id"|
"extrude.set.list"|
"extrude.set.metadata.find"|
"extrude.set.metadata.key"|
"extrude.set.metadata.size"|
"extrude.set.metadata.value"|
"extrude.set.name"|
"extrude.set.origin"|
"extrude.set.point.create"|
"extrude.set.point.delete"|
"extrude.set.point.find"|
"extrude.set.point.list"|
"extrude.set.point.near"|
"extrude.set.point.size"|
"extrude.set.region.element.num"|
"extrude.set.region.nodes"|
"extrude.set.set.un"|
"extrude.set.set.uv"|
"extrude.set.set.vn"|
"extrude.set.zone.count2"|
"extrude.set.zone.count3"|
"extrude.set.zone.target.autodir"|
"extrude.set.zone.target.edge"|
"extrude.set.zone.target.size"|
"extrude.set.zone.target.total"|
"struct.connectivity"|
"struct.delete"|
"struct.density"|
"struct.extra"|
"struct.find"|
"struct.force.nodal"|
"struct.force.nodal.local"|
"struct.force.update"|
"struct.head"|
"struct.id"|
"struct.id.component"|
"struct.list"|
"struct.local.system"|
"struct.mark"|
"struct.maxid"|
"struct.mech.convergence"|
"struct.mech.ratio.avg"|
"struct.mech.ratio.local"|
"struct.mech.ratio.max"|
"struct.near"|
"struct.next"|
"struct.node"|
"struct.num"|
"struct.pos"|
"struct.therm.expansion"|
"struct.type"|
"struct.typeid"|
"struct.was.updated"|
"struct.beam.area"|
"struct.beam.force"|
"struct.beam.length"|
"struct.beam.load"|
"struct.beam.moi"|
"struct.beam.moment"|
"struct.beam.moment.plastic"|
"struct.beam.poisson"|
"struct.beam.volume"|
"struct.beam.ydir"|
"struct.beam.young"|
"struct.cable.area"|
"struct.cable.force.axial"|
"struct.cable.grout.cohesion"|
"struct.cable.grout.confining"|
"struct.cable.grout.dir"|
"struct.cable.grout.disp"|
"struct.cable.grout.friction"|
"struct.cable.grout.perimeter"|
"struct.cable.grout.slip"|
"struct.cable.grout.stiffness"|
"struct.cable.grout.stress"|
"struct.cable.length"|
"struct.cable.slide"|
"struct.cable.slide.tol"|
"struct.cable.state.compression"|
"struct.cable.state.tension"|
"struct.cable.strain.plastic"|
"struct.cable.stress.axial"|
"struct.cable.table.grout.cohesion"|
"struct.cable.table.grout.friction"|
"struct.cable.volume"|
"struct.cable.yield.compression"|
"struct.cable.yield.tension"|
"struct.cable.young"|
"struct.geogrid.shear.cohesion"|
"struct.geogrid.shear.dir"|
"struct.geogrid.shear.disp"|
"struct.geogrid.shear.friction"|
"struct.geogrid.shear.state"|
"struct.geogrid.shear.stiffness"|
"struct.geogrid.shear.stress"|
"struct.geogrid.slide"|
"struct.geogrid.slide.tol"|
"struct.geogrid.stress.confining"|
"struct.link.attach"|
"struct.link.delete"|
"struct.link.extra"|
"struct.link.find"|
"struct.link.head"|
"struct.link.id"|
"struct.link.id.component"|
"struct.link.list"|
"struct.link.maxid"|
"struct.link.model"|
"struct.link.model.area"|
"struct.link.model.compression"|
"struct.link.model.disp"|
"struct.link.model.force"|
"struct.link.model.gap"|
"struct.link.model.gap.neg"|
"struct.link.model.gap.pos"|
"struct.link.model.prop"|
"struct.link.model.stiffness"|
"struct.link.model.tension"|
"struct.link.model.yield"|
"struct.link.next"|
"struct.link.node"|
"struct.link.num"|
"struct.link.side"|
"struct.link.slide"|
"struct.link.slide.tol"|
"struct.link.target"|
"struct.link.type"|
"struct.link.typeid"|
"struct.link.used.by"|
"struct.liner.embedded"|
"struct.liner.normal.dir"|
"struct.liner.normal.disp"|
"struct.liner.normal.stiffness"|
"struct.liner.normal.strength"|
"struct.liner.normal.stress"|
"struct.liner.shear.cohesion"|
"struct.liner.shear.dir"|
"struct.liner.shear.disp"|
"struct.liner.shear.friction"|
"struct.liner.shear.residual"|
"struct.liner.shear.state"|
"struct.liner.shear.stiffness"|
"struct.liner.shear.stress"|
"struct.liner.slide"|
"struct.liner.slide.tol"|
"sel.node.group"|
"sel.node.group.remove"|
"sel.node.isgroup"|
"struct.node.acc.global"|
"struct.node.acc.local"|
"struct.node.apply"|
"struct.node.apply.local"|
"struct.node.convergence"|
"struct.node.damp.local"|
"struct.node.disp.global"|
"struct.node.disp.local"|
"struct.node.dynamic.timestep"|
"struct.node.elements"|
"struct.node.extra"|
"struct.node.find"|
"struct.node.fix"|
"struct.node.fix.local"|
"struct.node.force.unbal.global"|
"struct.node.force.unbal.local"|
"struct.node.head"|
"struct.node.id"|
"struct.node.id.component"|
"struct.node.link"|
"struct.node.list"|
"struct.node.mark"|
"struct.node.mass.added"|
"struct.node.mass.local"|
"struct.node.maxid"|
"struct.node.near"|
"struct.node.next"|
"struct.node.num"|
"struct.node.pos"|
"struct.node.pos.reference"|
"struct.node.ratio"|
"struct.node.ratio.target"|
"struct.node.resultant"|
"struct.node.stiff.local"|
"struct.node.surface.valid"|
"struct.node.surface.xdir"|
"struct.node.system.local"|
"struct.node.system.surface"|
"struct.node.temp.increment"|
"struct.node.typeid"|
"struct.node.vel.global"|
"struct.node.vel.local"|
"struct.pile.area"|
"struct.pile.force"|
"struct.pile.gap"|
"struct.pile.length"|
"struct.pile.load"|
"struct.pile.moi"|
"struct.pile.moment"|
"struct.pile.moment.plastic"|
"struct.pile.normal.cohesion"|
"struct.pile.normal.dir"|
"struct.pile.normal.disp"|
"struct.pile.normal.friction"|
"struct.pile.normal.gap"|
"struct.pile.normal.state"|
"struct.pile.normal.stiffness"|
"struct.pile.normal.stress"|
"struct.pile.perimeter"|
"struct.pile.poisson"|
"struct.pile.rockbolt"|
"struct.pile.rupture.tension"|
"struct.pile.shear.cohesion"|
"struct.pile.shear.dir"|
"struct.pile.shear.disp"|
"struct.pile.shear.flag"|
"struct.pile.shear.friction"|
"struct.pile.shear.state"|
"struct.pile.shear.stiffness"|
"struct.pile.shear.stress"|
"struct.pile.slide"|
"struct.pile.slide.tol"|
"struct.pile.state.compression"|
"struct.pile.state.tension"|
"struct.pile.strain.failure"|
"struct.pile.stress.confining"|
"struct.pile.table.cohesion"|
"struct.pile.table.factor"|
"struct.pile.table.friction"|
"struct.pile.volume"|
"struct.pile.ydir"|
"struct.pile.yield.compression"|
"struct.pile.yield.tension"|
"struct.pile.young"|
"struct.shell.area"|
"struct.shell.beta"|
"struct.shell.depth.factor"|
"struct.shell.element.type"|
"struct.shell.poisson"|
"struct.shell.pressure"|
"struct.shell.prop.anis"|
"struct.shell.prop.matx"|
"struct.shell.prop.ortho"|
"struct.shell.prop.type"|
"struct.shell.resultant"|
"struct.shell.resultant.valid"|
"struct.shell.stress"|
"struct.shell.stress.max"|
"struct.shell.stress.min"|
"struct.shell.stress.prin"|
"struct.shell.stress.valid"|
"struct.shell.thickness"|
"struct.shell.volume"|
"struct.shell.young"|
"zone.aspect"|
"zone.bad"|
"zone.code"|
"zone.condition"|
"zone.containing"|
"zone.copy"|
"zone.create.gp"|
"zone.create.interface.elem"|
"zone.create.pos"|
"zone.create.ratio"|
"zone.creep.time.total"|
"zone.creep.timestep"|
"zone.cycle.init"|
"zone.density"|
"zone.dynamic.mul"|
"zone.dynamic.time.total"|
"zone.dynamic.timestep"|
"zone.extra"|
"zone.find"|
"zone.flow"|
"zone.fluid.density"|
"zone.fluid.model"|
"zone.fluid.prop"|
"zone.fluid.prop.index"|
"zone.fluid.ratio"|
"zone.fluid.stress.normal"|
"zone.fluid.time.total"|
"zone.fluid.unbal.avg"|
"zone.fluid.unbal.max"|
"zone.flux"|
"zone.force.update"|
"zone.geom.test"|
"zone.gp"|
"zone.gp.num"|
"zone.group"|
"zone.group.remove"|
"zone.head"|
"zone.hysteretic"|
"zone.id"|
"zone.inbox"|
"zone.isgroup"|
"zone.islive"|
"zone.join"|
"zone.list"|
"zone.maxid"|
"zone.mech.convergence"|
"zone.mech.prop.name"|
"zone.mech.prop.num"|
"zone.mech.ratio"|
"zone.mech.ratio.avg"|
"zone.mech.ratio.local"|
"zone.mech.ratio.max"|
"zone.model"|
"zone.model.init"|
"zone.near"|
"zone.near.all"|
"zone.near.list"|
"zone.near.live"|
"zone.near.map"|
"zone.next"|
"zone.num"|
"zone.ortho"|
"zone.overlays"|
"zone.planarity"|
"zone.plane.traction"|
"zone.pos"|
"zone.pp"|
"zone.prop"|
"zone.prop.index"|
"zone.rotation.inc"|
"zone.rotation.rate"|
"zone.state"|
"zone.state.restore"|
"zone.state.save"|
"zone.strain.inc"|
"zone.strain.rate"|
"zone.strain.shear.inc"|
"zone.strain.shear.rate"|
"zone.strain.vol.inc"|
"zone.strain.vol.rate"|
"zone.stress"|
"zone.stress.effective"|
"zone.stress.int"|
"zone.stress.max"|
"zone.stress.min"|
"zone.stress.prin"|
"zone.temp"|
"zone.test.quality"|
"zone.thermal.model"|
"zone.thermal.prop"|
"zone.thermal.prop.index"|
"zone.thermal.ratio"|
"zone.thermal.time.total"|
"zone.typeid"|
"zone.unbal"|
"zone.vol"|
"zone.vol.deformed"|
"zone.was.updated"|
"zone.work.elastic.shear"|
"zone.work.elastic.total"|
"zone.work.elastic.vol"|
"zone.work.plastic.shear"|
"zone.work.plastic.total"|
"zone.work.plastic.vol"|
"attach.create"|
"attach.delete"|
"attach.extra"|
"attach.find"|
"attach.group"|
"attach.group.remove"|
"attach.id"|
"attach.isgroup"|
"attach.list"|
"attach.master"|
"attach.master.face"|
"attach.master.zone"|
"attach.maxid"|
"attach.num"|
"attach.pos"|
"attach.slave"|
"attach.snap"|
"attach.type"|
"attach.typeid"|
"attach.weight.edge"|
"attach.weight.face"|
"zone.face.area"|
"zone.face.extra"|
"zone.face.find"|
"zone.face.find.normal"|
"zone.face.gp"|
"zone.face.group"|
"zone.face.group.remove"|
"zone.face.isgroup"|
"zone.face.normal"|
"zone.face.pos"|
"zone.face.size"|
"zone.field.component"|
"zone.field.extra"|
"zone.field.get"|
"zone.field.get.gp"|
"zone.field.gravity"|
"zone.field.hide.fluidnull"|
"zone.field.hide.mechnull"|
"zone.field.hide.thermnull"|
"zone.field.index"|
"zone.field.init"|
"zone.field.log"|
"zone.field.method.index"|
"zone.field.method.name"|
"zone.field.name"|
"zone.field.power"|
"zone.field.prop"|
"zone.field.quantity"|
"zone.field.radius.ratio"|
"zone.field.reset"|
"zone.field.source"|
"zone.field.tol"|
"zone.field.type"|
"zone.field.velocity.limit"|
"gp.accel"|
"gp.biot.modulus"|
"gp.convergence"|
"gp.copy"|
"gp.create"|
"gp.delete"|
"gp.disp"|
"gp.disp.small"|
"gp.dynamic.mul"|
"gp.dynamic.timestep"|
"gp.extra"|
"gp.find"|
"gp.fix"|
"gp.flow"|
"gp.fluid.app"|
"gp.fluid.load"|
"gp.fluid.modulus"|
"gp.fluid.modulus.confined"|
"gp.fluid.tension"|
"gp.fluid.unbal"|
"gp.fluid.vol.inv"|
"gp.flux"|
"gp.force.app"|
"gp.force.load"|
"gp.force.unbal"|
"gp.force.unbal.add"|
"gp.force.unbal.current"|
"gp.head"|
"gp.id"|
"gp.list"|
"gp.mass.add"|
"gp.mass.gravity"|
"gp.mass.inertial"|
"gp.maxid"|
"gp.name"|
"gp.near"|
"gp.near.all"|
"gp.near.live"|
"gp.next"|
"gp.num"|
"gp.pos"|
"gp.pp"|
"gp.pp.fix"|
"gp.ratio"|
"gp.ratio.target"|
"gp.sat"|
"gp.state.restore"|
"gp.state.save"|
"gp.stiff"|
"gp.temp"|
"gp.temp.app"|
"gp.temp.change"|
"gp.temp.fix"|
"gp.temp.source"|
"gp.typeid"|
"gp.vel"|
"gp.zones"|
"interface.find"|
"interface.group"|
"interface.group.remove"|
"interface.head"|
"interface.id"|
"interface.isgroup"|
"interface.list"|
"interface.name"|
"interface.next"|
"interface.elem.area"|
"interface.elem.extra"|
"interface.elem.group"|
"interface.elem.group.remove"|
"interface.elem.head"|
"interface.elem.host.face"|
"interface.elem.host.zone"|
"interface.elem.id"|
"interface.elem.isgroup"|
"interface.elem.join"|
"interface.elem.list"|
"interface.elem.next"|
"interface.elem.normal"|
"interface.elem.vertex"|
"interface.node.area"|
"interface.node.disp"|
"interface.node.disp.shear"|
"interface.node.extra"|
"interface.node.find"|
"interface.node.group"|
"interface.node.group.remove"|
"interface.node.head"|
"interface.node.host.face"|
"interface.node.host.weight"|
"interface.node.host.zone"|
"interface.node.id"|
"interface.node.isgroup"|
"interface.node.list"|
"interface.node.near"|
"interface.node.next"|
"interface.node.normal"|
"interface.node.penetration"|
"interface.node.pos"|
"interface.node.pp"|
"interface.node.prop"|
"interface.node.slip"|
"interface.node.state"|
"interface.node.stress.normal"|
"interface.node.stress.normal.add"|
"interface.node.stress.shear"|
"interface.node.target.face"|
"interface.node.target.weight"|
"interface.node.target.zone"|
"interface.node.tol"|
"interface.node.vel"|
"zone.tet.gp"|
"zone.tet.num"|
"zone.tet.smallest.vol"|
"zone.tet.strain.inc"|
"zone.tet.strain.rate"|
"zone.tet.stress"
)

%state STRING

%%

//Keywords
<YYINITIAL> {Keywords} {return SimpleTypes.KEYWORD;}

//Identifiers
<YYINITIAL>{
    //Identifiers
    {FishFuntion} {return SimpleTypes.FISH_FUNCTION;}

    {Identifier} {return SimpleTypes.IDENTIFIER;}

    //Literals
    {Number} {return SimpleTypes.NUMBER_LITERAL;}

    {String} {return SimpleTypes.STRING_LITERAL;}

    // Operators
    {Operators} {return SimpleTypes.OPERATOR;}

    {WhiteSpace}+ {return SimpleTypes.SEPARATOR;}

    // Comments
    {Comment} {return SimpleTypes.COMMENT;}
}

/* error fallback */
[^] { return TokenType.BAD_CHARACTER; }
